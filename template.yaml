apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: terraform-project-template
  title: Create Terraform Project Template
  description: Placeholder Text
  tags:
    - terraform
spec:
  owner: user:guest
  type: website
  parameters:
    - title: Provide information for creating your new Terraform repository
      required:
        - module_name
        - owner
      properties:
        module_name:
          title: Module Name
          type: string
          description: This is a unique name for the Terraform module within the Liatrio GitHub org
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: This is a small description to be added to the top of the included README.md
        owner:
          title: Owner
          type: string
          description: Owner of the repository
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - User
              - Group
    - title: Choose a provider
      properties:
        provider_name:
          title: Provider Name
          type: string
          description: The provider that will be populated within the provider.tf file
          default: aws
          enum:
            - aws
            - gcp
            - azure
          enumNames:
            - 'AWS'
            - 'GCP'
            - 'Azure'
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - ckilpatrick20
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          module_name: ${{ parameters.module_name }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.module_name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
